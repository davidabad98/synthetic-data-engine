{"filenames": ["aml_customer_due_diligence", "aml_risk_assessment", "aml_transaction_monitoring", "call_recording_analysis", "call_transcript_generation_user_based", "call_transcript_generation_versatile", "claim_submission", "insurance_business_owner", "insurance_critical_illness", "insurance_dental", "insurance_disability", "insurance_life", "insurance_ltc", "insurance_mortgage_protection", "insurance_personal_health", "insurance_travel", "investment_fhsa", "investment_lif", "investment_lira", "investment_resp", "investment_rrif", "investment_rrsp", "investment_tfsa", "suspicious_transaction_report"], "templates": [{"template_name": "aml_customer_due_diligence", "description": "Customer Due Diligence (CDD) template for insurance clients, capturing the information gathered during the KYC (Know Your Customer) process to meet AML regulatory requirements. This schema documents the verification of client identity, beneficial ownership, and source of funds.", "mappings": ["customer due diligence", "cdd", "kyc", "know your customer"], "fields": {"DueDiligenceID": {"datatype": "string", "pattern": "CDD-[0-9]{8}", "description": "Unique identifier for the customer due diligence record."}, "ClientID": {"datatype": "string", "pattern": "CL-[0-9]{7}", "description": "Client identifier linked to the due diligence."}, "DueDiligenceLevel": {"datatype": "string", "enum": ["Standard", "Enhanced", "Simplified"], "description": "Level of due diligence applied based on risk assessment."}, "CompletionDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the due diligence process was completed."}, "IdentityVerification": {"datatype": "object", "properties": {"VerificationMethod": {"datatype": "array", "items": {"datatype": "string", "enum": ["Government ID", "Passport", "Driver's License", "Birth Certificate", "Digital ID Verification", "Biometric Verification"]}, "description": "Methods used to verify the client's identity."}, "DocumentNumbers": {"datatype": "array", "items": {"datatype": "string"}, "description": "Document numbers of identification documents provided."}, "DocumentExpiryDates": {"datatype": "array", "items": {"datatype": "date", "format": "YYYY-MM-DD"}, "description": "Expiry dates of identification documents provided."}, "VerificationStatus": {"datatype": "string", "enum": ["Verified", "Pending", "Failed", "Expired"], "description": "Status of the identity verification process."}}, "description": "Details of the identity verification process."}, "AddressVerification": {"datatype": "object", "properties": {"VerificationMethod": {"datatype": "string", "enum": ["Utility Bill", "Bank Statement", "Government Correspondence", "Property Tax Bill", "Electronic Verification", "Site Visit"], "description": "Method used to verify the client's address."}, "VerificationDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the address was verified."}, "VerificationStatus": {"datatype": "string", "enum": ["Verified", "Pending", "Failed"], "description": "Status of the address verification process."}}, "description": "Details of the address verification process."}, "BeneficialOwnership": {"datatype": "object", "properties": {"HasBeneficialOwners": {"datatype": "boolean", "description": "Whether there are beneficial owners other than the client."}, "BeneficialOwnersVerified": {"datatype": "boolean", "description": "Whether all beneficial owners have been verified."}, "OwnershipStructure": {"datatype": "string", "enum": ["Individual", "Joint", "Corporate", "Trust", "Complex"], "description": "Structure of the ownership of insurance policies."}}, "description": "Information about beneficial ownership verification."}, "PEPScreening": {"datatype": "object", "properties": {"PEPStatus": {"datatype": "string", "enum": ["Not PEP", "Domestic PEP", "Foreign PEP", "Head of International Organization", "Close Associate", "Family Member of PEP"], "description": "Political Exposed Person status of the client."}, "PEPScreeningDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when PEP screening was performed."}, "ScreeningSource": {"datatype": "string", "description": "Source or database used for PEP screening."}}, "description": "Details of Politically Exposed Person screening."}, "SanctionsScreening": {"datatype": "object", "properties": {"SanctionsStatus": {"datatype": "string", "enum": ["No Match", "Potential Match", "Confirmed Match", "False Positive"], "description": "Result of sanctions screening."}, "ScreeningDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when sanctions screening was performed."}, "ScreeningSources": {"datatype": "array", "items": {"datatype": "string"}, "description": "Sources or databases used for sanctions screening."}}, "description": "Details of sanctions screening process."}, "SourceOfFunds": {"datatype": "object", "properties": {"PrimarySource": {"datatype": "string", "enum": ["Employment Income", "Business Income", "Investment Income", "Inheritance", "Sale of Assets", "Retirement Funds", "Gift", "Other"], "description": "Primary source of the client's funds."}, "SourceVerificationMethod": {"datatype": "array", "items": {"datatype": "string", "enum": ["Bank Statements", "Pay Stubs", "Tax Returns", "Financial Statements", "Letter from Employer", "Gift Letter", "Client Declaration", "Other Documentation"]}, "description": "Methods used to verify the source of funds."}, "VerificationStatus": {"datatype": "string", "enum": ["Verified", "Pending", "Insufficient", "Rejected"], "description": "Status of the source of funds verification."}}, "description": "Information about the verification of the client's source of funds."}, "BusinessPurpose": {"datatype": "string", "enum": ["Retirement Planning", "Estate Planning", "Income Protection", "Tax Planning", "Education Funding", "Health Coverage", "Wealth Accumulation", "Business Continuation", "Key Person Insurance", "Other"], "description": "Stated purpose of the insurance relationship."}, "ExpectedActivity": {"datatype": "object", "properties": {"ExpectedTransactionFrequency": {"datatype": "string", "enum": ["One-time", "Monthly", "Quarterly", "Semi-Annual", "Annual", "Irregular"], "description": "Expected frequency of transactions."}, "ExpectedTransactionAmount": {"datatype": "number", "description": "Expected average transaction amount in CAD."}, "ExpectedProductTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Term Life Insurance", "Whole Life Insurance", "Universal Life Insurance", "Critical Illness Insurance", "Disability Insurance", "Annuities", "Group Benefits", "Investment Products"]}, "description": "Types of insurance products the client is expected to hold."}}, "description": "Expected transaction and product usage patterns."}, "ReviewDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the due diligence information should be reviewed next."}, "CompletedBy": {"datatype": "string", "description": "Employee ID or name who completed the due diligence process."}, "ApprovedBy": {"datatype": "string", "description": "Employee ID or name who approved the due diligence."}}}, {"template_name": "aml_risk_assessment", "description": "Anti-Money Laundering (AML) risk assessment template for insurance products. This schema captures key risk factors evaluated during onboarding and ongoing monitoring of insurance clients to detect potential money laundering activities.", "mappings": ["aml risk assessment", "money laundering risk", "client risk rating", "aml scoring"], "fields": {"RiskAssessmentID": {"datatype": "string", "pattern": "AML-RA-[0-9]{8}", "description": "Unique identifier for the AML risk assessment (e.g., AML-RA-20250405)."}, "ClientID": {"datatype": "string", "pattern": "CL-[0-9]{7}", "description": "Client identifier linked to the risk assessment."}, "AssessmentDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the risk assessment was performed."}, "AssessmentType": {"datatype": "string", "enum": ["Initial", "Periodic", "Triggered", "Enhanced Due Diligence"], "description": "Type of risk assessment being performed."}, "OverallRiskScore": {"datatype": "number", "min": 0, "max": 100, "description": "Calculated overall AML risk score (0-100, where higher numbers indicate higher risk)."}, "RiskCategory": {"datatype": "string", "enum": ["Low", "Medium", "High", "Very High"], "description": "Risk category based on the overall risk score."}, "ClientRiskFactors": {"datatype": "object", "properties": {"PEPStatus": {"datatype": "boolean", "description": "Whether the client is a Politically Exposed Person."}, "HighRiskOccupation": {"datatype": "boolean", "description": "Whether the client has an occupation considered high-risk for AML."}, "HighRiskJurisdiction": {"datatype": "boolean", "description": "Whether the client resides in or has connections to high-risk jurisdictions."}, "AdverseMediaPresence": {"datatype": "boolean", "description": "Whether there is negative news or adverse media about the client."}}, "description": "Client-specific risk factors considered in assessment."}, "ProductRiskFactors": {"datatype": "object", "properties": {"SinglePremiumProducts": {"datatype": "boolean", "description": "Whether the client has purchased single premium life insurance products."}, "HighCashValueProducts": {"datatype": "boolean", "description": "Whether the client has high cash value insurance products."}, "FrequentSurrenders": {"datatype": "boolean", "description": "Whether the client has a pattern of early policy surrenders."}}, "description": "Insurance product-specific risk factors."}, "TransactionRiskFactors": {"datatype": "object", "properties": {"LargeTransactions": {"datatype": "boolean", "description": "Whether the client has made unusually large transactions."}, "StructuredTransactions": {"datatype": "boolean", "description": "Whether there are patterns of structured transactions below reporting thresholds."}, "ThirdPartyPayments": {"datatype": "boolean", "description": "Whether payments come from or go to third parties."}}, "description": "Transaction-specific risk factors."}, "EscalationRequired": {"datatype": "boolean", "description": "Whether the assessment requires escalation to the AML compliance team."}, "ReviewFrequency": {"datatype": "string", "enum": ["Annual", "Semi-Annual", "Quarterly", "Monthly"], "description": "How frequently the client's risk assessment should be reviewed."}, "AssessedBy": {"datatype": "string", "description": "Employee ID or name who conducted the risk assessment."}, "Notes": {"datatype": "string", "description": "Additional notes or observations regarding the risk assessment."}}}, {"template_name": "aml_transaction_monitoring", "description": "Transaction monitoring template for insurance products designed to detect unusual patterns that may indicate money laundering. This schema tracks transactions, alerts generated, and investigation outcomes to maintain compliance with AML regulations.", "mappings": ["transaction monitoring", "aml monitoring", "transaction surveillance", "unusual activity monitoring"], "fields": {"MonitoringRecordID": {"datatype": "string", "pattern": "TM-[0-9]{10}", "description": "Unique identifier for the transaction monitoring record."}, "ClientID": {"datatype": "string", "pattern": "CL-[0-9]{7}", "description": "Client identifier linked to the monitored transactions."}, "PolicyNumber": {"datatype": "string", "pattern": "POL-[0-9]{8}", "description": "Insurance policy number related to the monitored transactions."}, "MonitoringPeriod": {"datatype": "object", "properties": {"StartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Start date of the monitoring period."}, "EndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "End date of the monitoring period."}}, "description": "Time period covered by this monitoring record."}, "TransactionsSummary": {"datatype": "object", "properties": {"TotalTransactions": {"datatype": "number", "min": 0, "description": "Total number of transactions during the monitoring period."}, "TotalValue": {"datatype": "number", "min": 0, "description": "Total monetary value of all transactions during the period."}, "LargestTransaction": {"datatype": "number", "min": 0, "description": "Value of the largest single transaction during the period."}, "AverageTransaction": {"datatype": "number", "min": 0, "description": "Average value of transactions during the period."}}, "description": "Summary statistics of transactions during the monitoring period."}, "TransactionTypes": {"datatype": "object", "properties": {"PremiumPayments": {"datatype": "number", "min": 0, "description": "Number of premium payments during the period."}, "PolicyLoans": {"datatype": "number", "min": 0, "description": "Number of policy loans taken during the period."}, "PartialWithdrawals": {"datatype": "number", "min": 0, "description": "Number of partial withdrawals during the period."}, "PolicySurrenders": {"datatype": "number", "min": 0, "description": "Number of policy surrenders during the period."}, "BeneficiaryPayments": {"datatype": "number", "min": 0, "description": "Number of payments to beneficiaries during the period."}, "PolicyChanges": {"datatype": "number", "min": 0, "description": "Number of policy changes during the period."}}, "description": "Breakdown of transaction types during the monitoring period."}, "AlertsGenerated": {"datatype": "array", "items": {"datatype": "object", "properties": {"AlertID": {"datatype": "string", "pattern": "ALERT-[0-9]{10}", "description": "Unique identifier for the alert."}, "AlertDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the alert was generated."}, "AlertType": {"datatype": "string", "enum": ["Large Transaction", "Structuring", "Rapid Movement of Funds", "Early Policy Termination", "Unusual Premium Increase", "Third-Party Payment", "High-Risk Jurisdiction", "Multiple Policy Changes", "Unusual Beneficiary Change", "Pattern Break"], "description": "Type of alert generated by the monitoring system."}, "AlertDescription": {"datatype": "string", "description": "Detailed description of the alert."}, "RelatedTransactions": {"datatype": "array", "items": {"datatype": "string", "pattern": "TXN-[0-9]{12}"}, "description": "List of transaction IDs related to this alert."}, "AlertStatus": {"datatype": "string", "enum": ["New", "Under Investigation", "Cleared", "Escalated", "Reported"], "description": "Current status of the alert."}}}, "description": "List of alerts generated during the monitoring period."}, "InvestigationDetails": {"datatype": "array", "items": {"datatype": "object", "properties": {"InvestigationID": {"datatype": "string", "pattern": "INV-[0-9]{8}", "description": "Unique identifier for the investigation."}, "RelatedAlertIDs": {"datatype": "array", "items": {"datatype": "string", "pattern": "ALERT-[0-9]{10}"}, "description": "List of alert IDs related to this investigation."}, "StartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the investigation was started."}, "CompletionDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the investigation was completed."}, "InvestigationFindings": {"datatype": "string", "description": "Summary of investigation findings."}, "JustificationProvided": {"datatype": "string", "description": "Justification provided by the client for the unusual activity, if any."}, "DocumentationReceived": {"datatype": "boolean", "description": "Whether supporting documentation was received from the client."}, "Outcome": {"datatype": "string", "enum": ["False Positive", "Legitimate Activity", "Suspicious Activity", "Reportable", "Undetermined"], "description": "Final outcome of the investigation."}, "Actions": {"datatype": "array", "items": {"datatype": "string", "enum": ["STR Filed", "Client Contact", "Account Restriction", "Enhanced Monitoring", "Client Exit", "No Action Required"]}, "description": "Actions taken as a result of the investigation."}}}, "description": "Details of investigations conducted during the monitoring period."}, "RegulatoryReporting": {"datatype": "array", "items": {"datatype": "object", "properties": {"ReportType": {"datatype": "string", "enum": ["STR", "LCTR", "Terrorist Property Report", "Other"], "description": "Type of regulatory report filed."}, "ReportDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the report was filed."}, "ReferenceNumber": {"datatype": "string", "description": "Reference number assigned to the regulatory report."}, "ReportingAuthority": {"datatype": "string", "enum": ["FINTRAC", "OSFI", "Provincial Insurance Regulator", "Other"], "description": "Regulatory authority to which the report was submitted."}}}, "description": "Regulatory reports filed during the monitoring period."}, "MonitoringStatus": {"datatype": "string", "enum": ["Active", "Under Review", "Completed"], "description": "Current status of the monitoring activity."}, "ReviewDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the monitoring record was last reviewed."}, "ReviewedBy": {"datatype": "string", "description": "Employee ID or name who reviewed the monitoring record."}}}, {"template_name": "call_recording_analysis", "description": "This template is designed for performing analysis on a provided call recording transcript, specifically focusing on sentiment, agent behavior, customer experience, and issue resolution.", "mappings": ["analyze call recording", "sentiment analysis of call", "call quality assessment", "evaluate call transcript", "report on call", "assess customer experience"], "fields": {"call_transcript": {"datatype": "string", "description": "The full text of the call recording transcript to be analyzed."}, "sentiment_summary_caller": {"datatype": "string", "description": "A brief summary of the caller's overall sentiment throughout the call.", "llm_action": "analyze_sentiment"}, "agent_attitude": {"datatype": "string", "description": "Description of the call center agent's attitude and demeanor during the call.", "llm_action": "analyze_behavior"}, "client_experience_assessment": {"datatype": "string", "description": "Assessment of the overall client experience based on the call.", "llm_action": "evaluate_experience"}, "issue_addressed_happy": {"datatype": "string", "description": "Indication of whether the client's issue was addressed and whether they seemed happy with the resolution (or lack thereof).", "llm_action": "evaluate_resolution"}, "agent_improvement_suggestions": {"datatype": "string", "description": "Suggestions on what the agent could have done differently to improve the call.", "llm_action": "provide_suggestions"}}, "prompt_template": "Provide an analysis of the following call recording transcript:\n\n{{call_transcript}}\n\nCreate a report in the following way:\n\nSummarization Sentiment of the Caller:\n\nAttitude of the Agent:\n\nHow was the client experience?\n\nDid the client\u2019s issue get addressed and were they happy?\n\nWhat could the agent have done differently?", "action": {"type": "analyze_call_transcript", "input_fields": ["call_transcript"], "output_fields": ["sentiment_summary_caller", "agent_attitude", "client_experience_assessment", "issue_addressed_happy", "agent_improvement_suggestions"], "prompt_field": "prompt_template"}}, {"template_name": "call_transcript_generation_user_based", "description": "This template is designed for generating mock call center transcripts when the user provides a detailed description of the scenario, including specific roles, topics, and potentially even names. It prioritizes leveraging the user's detailed instructions directly in the prompt.", "mappings": ["specific product related query", "Angry user interaction transcript", "User defined reason for call, feedback, complaint, query, technical report", "generate call based on description", "caller sentiment is defined, agent persona is defined", "Agent experience defined as fresher, professional, Advanced"], "fields": {"user_query": {"datatype": "string", "description": "The detailed query provided by the user describing the call scenario."}, "generated_transcript": {"datatype": "string", "description": "The call transcript generated based on the user's query.", "llm_action": "generate_transcript"}}, "prompt_template": "Generate a realistic call center transcript based on the following detailed scenario provided by the user: \"{{user_query}}\". Ensure the dialogue reflects the roles and situation described.", "output_format": {"speaker_label": "[Speaker Name]:", "turn_separator": "\n"}, "dialogue_instructions": {"greeting": "The call should begin with a standard professional greeting from the agent, including their name and the company name. Unless otherwise specified in prompt template", "identification": "The agent should politely ask for the caller's name and may need to verify their identity using an account number or other relevant information. Unless otherwise specified in prompt template", "problem_description": "The caller should clearly articulate their reason for calling, aligning with the selected. Unless otherwise specified in prompt template", "agent_response": "The agent's immediate response should acknowledge the caller's reason for calling, Unless otherwise specified in prompt template", "information_gathering": "The agent should ask relevant clarifying questions to fully understand the 'ReasonForCall' and 'CallObjective', tailoring their questions to the specific 'Product' involved. Unless otherwise specified in prompt template", "solution_attempt_or_guidance": "Based on the 'ReasonForCall' and the information gathered, the agent should attempt to provide a solution, Unless otherwise specified in prompt template", "handling_sentiment": "The agent should actively manage the caller's 'Sentiment'. Unless otherwise specified in prompt template", "handling_complications": "If 'PotentialComplications' are specified, the dialogue should realistically incorporate these challenges and demonstrate how the agent attempts to handle them (e.g., placing the caller on hold to consult a resource, explaining a system issue).", "closing": "The call should conclude with a summary of the outcome and polite closing remarks from both the caller and the agent. Unless otherwise specified in prompt template", "tone_guidance": "Maintain a professional tone throughout the call, Unless otherwise specified in prompt template"}, "action": {"type": "generate_call_transcript_from_query", "input_fields": ["user_query"], "output_field": "generated_transcript", "prompt_field": "prompt_template", "format_field": "output_format"}}, {"template_name": "call_transcript_generation_versatile", "description": "This template provides comprehensive instructions for an LLM to generate realistic and logically consistent customer service call transcripts covering various scenarios, customer sentiments, agent personas, and products.", "mappings": ["generate diverse call transcript", "create realistic call recording scenario", "simulate varied customer service interactions"], "fields": {"CallID": {"datatype": "string", "pattern": "CALL-[0-9]{6}", "description": "Unique identifier for the call record."}, "CallerName": {"datatype": "string", "description": "Full name of the customer."}, "CallerPersona": {"datatype": "string", "enum": ["Busy Professional", "Elderly Customer (less tech-savvy)", "Impatient Individual", "Calm and Patient Customer", "Inquisitive Customer"], "description": "Brief description of the caller's personality or demeanor."}, "AgentName": {"datatype": "string", "description": "Full name of the agent."}, "AgentPersona": {"datatype": "string", "enum": ["Professional", "Friendly", "Empathetic", "Direct and Efficient", "Fresher"], "description": "The personality or experience level of the call center agent."}, "ReasonForCall": {"datatype": "string", "enum": ["Feedback - Positive", "Feedback - Negative", "Complaint - Service Issue", "Complaint - Product Defect", "Complaint - Billing Error", "Query - Product Information", "Query - Account Status", "Query - Policy Details", "Technical Issue - Login", "Technical Issue - Feature Malfunction", "Technical Issue - Connectivity", "Other"], "description": "Primary reason why the customer contacted the call center."}, "CallObjective": {"datatype": "string", "description": "Specific goal the customer wants to achieve during the call (e.g., understand a charge, resolve a technical problem, provide appreciation)."}, "Product": {"datatype": "string", "enum": ["Dental Insurance", "Medical Insurance", "Investment Account", "Life Insurance Policy", "Software Subscription", "Hardware Device"], "description": "Product or service related to the call."}, "Sentiment": {"datatype": "string", "enum": ["Angry", "Frustrated", "Neutral", "Happy", "Sad", "Anxious"], "description": "Initial sentiment of the customer."}, "DesiredCallLength": {"datatype": "string", "enum": ["Short and to the point", "Allow for detailed explanation", "Unspecified"], "description": "General expectation for the call duration."}, "PotentialComplications": {"datatype": "array", "items": {"type": "string"}, "description": "Possible issues or challenges that might arise during the call (e.g., system outage, missing information, need for escalation)."}, "AgentUpsellAttempt": {"datatype": "boolean", "description": "Should the agent attempt to upsell?"}, "Outcome": {"datatype": "string", "enum": ["Resolved", "Partially Resolved", "Unresolved", "Escalated", "Customer Satisfied", "Customer Dissatisfied", "Information Provided"], "description": "Overall outcome of the call from the perspective of resolution and customer satisfaction."}, "CallTranscript": {"datatype": "string", "description": "The generated transcript of the call.", "llm_action": "generate_transcript"}}, "dialogue_instructions": {"greeting": "The call should begin with a standard professional greeting from the agent, including their name and the company name.", "identification": "The agent should politely ask for the caller's name and may need to verify their identity using an account number or other relevant information.", "problem_description": "The caller should clearly articulate their reason for calling, aligning with the selected 'ReasonForCall'. Their initial tone and language should reflect their 'Sentiment' and 'CallerPersona'.", "agent_response": "The agent's immediate response should acknowledge the caller's reason for calling and their expressed 'Sentiment'. The agent's tone and approach should be consistent with their 'AgentPersona' (e.g., an 'Empathetic' agent will express understanding, a 'Direct and Efficient' agent will focus on getting to the solution quickly).", "information_gathering": "The agent should ask relevant clarifying questions to fully understand the 'ReasonForCall' and 'CallObjective', tailoring their questions to the specific 'Product' involved.", "solution_attempt_or_guidance": "Based on the 'ReasonForCall' and the information gathered, the agent should attempt to provide a solution, offer guidance, or explain the next steps. For 'Technical Issue' calls, this might involve troubleshooting steps. For 'Query' calls, it involves providing accurate information. For 'Complaint' calls, it involves acknowledging the issue and outlining the resolution process.", "handling_sentiment": "The agent should actively manage the caller's 'Sentiment'. For negative sentiments, the agent should use empathetic language and focus on de-escalation. For positive sentiments, the agent should express gratitude.", "upsell_opportunity": "If 'AgentUpsellAttempt' is set to true and it's a natural point in the conversation after addressing the primary concern, the agent should briefly introduce a relevant additional product or service related to the 'Product' discussed.", "handling_complications": "If 'PotentialComplications' are specified, the dialogue should realistically incorporate these challenges and demonstrate how the agent attempts to handle them (e.g., placing the caller on hold to consult a resource, explaining a system issue). A 'Fresher' agent might explicitly state they need to seek assistance.", "closing": "The call should conclude with a summary of the outcome and polite closing remarks from both the caller and the agent. The final 'Outcome' should logically align with the 'ReasonForCall', initial 'Sentiment', and the effectiveness of the agent's handling of the call.", "tone_guidance": "Maintain a professional tone throughout the call, with variations based on the 'AgentPersona' and the caller's 'Sentiment'. Ensure the language used is appropriate for the 'Product' and the 'ReasonForCall'."}, "constraints": [{"if": {"field": "ReasonForCall", "contains": "Complaint"}, "then": {"field": "Sentiment", "not_in": ["Happy"]}}, {"if": {"field": "ReasonForCall", "contains": "Feedback - Positive"}, "then": {"field": "Sentiment", "in": ["Happy", "Neutral"]}}, {"if": {"field": "ReasonForCall", "contains": "Technical Issue"}, "then": {"field": "Sentiment", "not_in": ["Happy"]}}, {"if": {"field": "AgentPersona", "equals": "Fresher"}, "then": {"instruction": "The agent's dialogue may include phrases indicating they are new or need to consult with a colleague (e.g., 'Let me quickly check on that for you.', 'Could you please hold for a moment while I look into this?')."}}, {"if": {"field": "AgentPersona", "equals": "Professional"}, "then": {"instruction": "The agent's language should be formal, efficient, and focused on resolving the issue or providing information."}}, {"if": {"field": "AgentPersona", "equals": "Friendly"}, "then": {"instruction": "The agent should use a warm, approachable, and conversational tone while maintaining professionalism."}}, {"if": {"field": "AgentPersona", "equals": "Empathetic"}, "then": {"instruction": "The agent should actively demonstrate understanding and concern for the caller's situation through their language."}}, {"if": {"field": "AgentPersona", "equals": "Direct and Efficient"}, "then": {"instruction": "The agent should focus on quickly identifying the issue and providing a solution without unnecessary small talk."}}, {"if": {"field": "Sentiment", "in": ["Angry", "Frustrated"]}, "then": {"instruction": "The agent should prioritize de-escalation techniques and express empathy."}}], "output_format": {"speaker_label": "[Speaker Name]:", "turn_separator": "\n"}, "action": {"type": "generate_call_transcript", "input_fields": ["CallerName", "CallerPersona", "AgentName", "AgentPersona", "ReasonForCall", "CallObjective", "Product", "Sentiment", "DesiredCallLength", "PotentialComplications", "AgentUpsellAttempt"], "output_field": "CallTranscript", "instructions_field": "dialogue_instructions", "constraints_field": "constraints", "format_field": "output_format"}}, {"template_name": "claim_submission", "description": "This template captures details of an insurance claim submission, linking it to a specific policy and categorizing it by claim type. It includes key details such as the claim amount, submission date, status, policyholder information, and a description of the claim. Additionally, it allows for the attachment of supporting documents, ensuring a comprehensive record for processing and review.", "mappings": ["claim submission", "insurance claim", "claim process", "file a claim"], "fields": {"ClaimID": {"datatype": "string", "pattern": "CL-[0-9]{6}", "description": "Unique identifier for the claim submission (e.g., CL-123456)."}, "PolicyID": {"datatype": "string", "pattern": "([DI|LI|CI|DA|DC|LC])-[0-9]{6}", "description": "Policy ID associated with the claim. It follows a specific pattern depending on the claim type (e.g., DI-123456 for dental insurance)."}, "ClaimType": {"datatype": "string", "enum": ["Health Claim", "Dental Claim", "Life Insurance Claim", "Critical Illness Insurance Claim", "Disability Insurance Claim", "Accidental Death Insurance Claim", "Long-Term Care Insurance Claim"], "description": "Type of insurance claim being submitted."}, "ClaimAmountRequested": {"datatype": "number", "description": "The amount of money being claimed by the policyholder."}, "ClaimDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "The date when the claim was submitted."}, "ClaimStatus": {"datatype": "string", "enum": ["Submitted", "Under Review", "Approved", "Denied"], "description": "Current status of the claim."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder submitting the claim."}, "ClaimDetails": {"datatype": "string", "description": "A brief description of the reason for the claim."}, "SupportingDocuments": {"datatype": "array", "items": {"documentType": {"datatype": "string", "description": "Type of supporting document (e.g., medical report, invoice, police report)."}, "documentURL": {"datatype": "string", "description": "URL or file path to the uploaded supporting document."}}, "description": "List of documents submitted along with the claim."}}}, {"template_name": "insurance_business_owner", "description": "Business Owner Insurance synthetic data template. Business owner insurance provides coverage for business owners, their family, partners, and employees. It helps protect the business in the event of losing key personnel, provides health or life insurance for employees, and includes provisions for buy-sell agreements, estate planning, and minimizing tax liabilities during retirement or asset transfer.", "mappings": ["business owner insurance", "business insurance", "commercial insurance", "business protection"], "fields": {"PolicyID": {"datatype": "string", "pattern": "BO-[0-9]{6}", "description": "Unique identifier for the business owner insurance policy (e.g., BO-123456)."}, "BusinessOwnerName": {"datatype": "string", "description": "Full name of the business owner."}, "BusinessName": {"datatype": "string", "description": "Name of the business the policyholder owns."}, "BusinessType": {"datatype": "string", "description": "Type of business the owner operates (e.g., retail, consulting, manufacturing)."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the business owner insurance policy became effective."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the business owner insurance policy expires."}, "CoverageAmount": {"datatype": "number", "description": "Amount of insurance coverage provided for the business owner and associated coverage for employees, partners, and the business itself."}, "CoverageType": {"datatype": "string", "enum": ["Life Insurance", "Health Insurance", "Disability Insurance", "Buy-Sell Agreement", "Key Person Insurance"], "description": "Type of coverage included in the business owner insurance (e.g., life, health, disability, buy-sell, key person)."}, "PremiumAmount": {"datatype": "number", "description": "Monthly or annual premium paid for the business owner insurance."}, "PaymentFrequency": {"datatype": "string", "enum": ["Monthly", "Annually"], "description": "Frequency at which the premium is paid (Monthly or Annually)."}, "BuySellAgreementCoverage": {"datatype": "boolean", "description": "Indicates if the policy includes coverage for a buy-sell agreement in case a business partner dies."}, "KeyPersonCoverage": {"datatype": "boolean", "description": "Indicates if the policy includes key person insurance to protect against the loss of a critical team member."}, "EstatePlanningCoverage": {"datatype": "boolean", "description": "Indicates if the policy includes provisions for estate planning, such as tax-efficient asset transfer."}, "EmployeeInsuranceCoverage": {"datatype": "boolean", "description": "Indicates if the policy includes employee health or life insurance coverage."}, "LoanSecurityCoverage": {"datatype": "boolean", "description": "Indicates if the policy can be used as collateral for securing a business loan."}, "RetirementPlanningCoverage": {"datatype": "boolean", "description": "Indicates if the policy includes coverage for minimizing tax bills during retirement."}, "PolicyHolderTaxMinimization": {"datatype": "boolean", "description": "Indicates if the policy provides tax minimization strategies for the policyholder when drawing from corporate assets."}, "PolicyHolderBusinessAssets": {"datatype": "number", "description": "Total value of business assets to be used as security or to fund estate planning."}, "BusinessPartners": {"datatype": "array", "items": {"name": {"datatype": "string", "description": "Full name of the business partner."}, "relationship": {"datatype": "string", "description": "Relationship of the partner to the business owner (e.g., co-owner, silent partner)."}}, "description": "List of business partners included in the insurance policy, if applicable."}, "Beneficiaries": {"datatype": "array", "items": {"name": {"datatype": "string", "description": "Full name of the beneficiary who will receive the insurance payout."}, "relationship": {"datatype": "string", "description": "Relationship of the beneficiary to the business owner (e.g., spouse, child, business partner)."}, "sharePercentage": {"datatype": "number", "description": "Percentage of the payout that the beneficiary will receive."}}, "description": "List of beneficiaries for the life insurance payout in the event of the business owner's death."}, "ClaimStatus": {"datatype": "string", "enum": ["Approved", "Pending", "Denied"], "description": "Current status of the business owner insurance claim (Approved, Pending, or Denied)."}, "ClaimAmountPaid": {"datatype": "number", "description": "Amount paid out for claims made under the business owner insurance policy."}, "PolicyRenewal": {"datatype": "boolean", "description": "Indicates whether the policy is eligible for renewal at the end of the term."}, "RenewalTermLength": {"datatype": "number", "description": "Length of the renewal term if the policy is renewed (in years)."}}}, {"template_name": "insurance_critical_illness", "description": "Synthetic data template for critical illness insurance policies, including details about covered illnesses, payout amounts, eligibility, and coverage options.", "mappings": ["critical illness", "critical illness insurance", "serious illness coverage", "critical illness plan", "illness protection"], "fields": {"PolicyID": {"datatype": "string", "pattern": "CII-[0-9]{6}", "description": "Unique identifier for the critical illness insurance policy (e.g., CII-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder."}, "PolicyHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the policyholder."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Start date of the critical illness insurance policy."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "End date of the critical illness insurance policy (if applicable)."}, "PolicyType": {"datatype": "string", "enum": ["Individual", "Family", "Business"], "description": "The type of critical illness insurance policy: Individual, Family, or Business."}, "CoverageAmount": {"datatype": "number", "description": "The lump sum payout amount that the policyholder will receive if diagnosed with a covered critical illness."}, "CoveredIllnesses": {"datatype": "array", "items": {"datatype": "string", "enum": ["Cancer", "Heart Attack", "Stroke", "Major Organ Failure on Waiting List", "Severe Burns", "Other"]}, "description": "List of critical illnesses covered under the policy."}, "PolicyHolderEmploymentStatus": {"datatype": "string", "enum": ["Employed", "Self-Employed", "Retired", "Unemployed"], "description": "Employment status of the policyholder."}, "FamilyCoverageOption": {"datatype": "boolean", "description": "Indicates whether the policyholder has opted for family coverage under the policy."}, "FamilyMembersCovered": {"datatype": "array", "items": {"datatype": "string", "description": "Names of family members covered under the policy, if applicable."}, "description": "List of family members covered under the critical illness insurance policy."}, "CriticalIllnessClaimed": {"datatype": "boolean", "description": "Indicates whether the policyholder has made a claim for a covered critical illness."}, "ClaimAmountPaid": {"datatype": "number", "description": "The amount paid out for a claim, if applicable."}, "PremiumAmount": {"datatype": "number", "description": "The monthly or annual premium amount the policyholder pays for the critical illness insurance."}, "PremiumFrequency": {"datatype": "string", "enum": ["Monthly", "Quarterly", "Annually"], "description": "The frequency at which premiums are paid for the critical illness insurance."}, "WaitingPeriod": {"datatype": "number", "description": "The waiting period in days before the policyholder can file a claim after being diagnosed with a covered critical illness."}, "Exclusions": {"datatype": "array", "items": {"datatype": "string", "description": "List of exclusions under the policy (e.g., pre-existing conditions, cosmetic surgeries, etc.)."}, "description": "Exclusions from the critical illness insurance policy."}, "CashBackOption": {"datatype": "boolean", "description": "Indicates whether the policyholder has opted for a cash-back option later in life."}, "PayoutFlexibility": {"datatype": "string", "enum": ["Medical Expenses", "Daily Living Expenses", "Mortgage", "Home Health Care", "Other"], "description": "The flexibility of how the lump sum payout can be used by the policyholder (e.g., for medical bills, mortgage payments, etc.)."}, "PayoutDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "The date when the lump sum payout was made to the policyholder."}, "PolicyHolderOccupation": {"datatype": "string", "description": "Occupation of the policyholder, which may impact the insurance premium or coverage options."}, "PreExistingConditionsCovered": {"datatype": "boolean", "description": "Indicates whether pre-existing medical conditions are covered under the policy."}, "PolicyStatus": {"datatype": "string", "enum": ["Active", "Lapsed", "Cancelled", "Claimed"], "description": "Current status of the critical illness insurance policy."}, "BusinessCoverage": {"datatype": "boolean", "description": "Indicates whether the policyholder\u2019s business is covered for key employees or business owners becoming critically ill."}, "BusinessContinuityCoverage": {"datatype": "boolean", "description": "Indicates whether business continuity coverage is included in the critical illness insurance policy."}, "DebtRepaymentCoverage": {"datatype": "boolean", "description": "Indicates whether debt repayment coverage is included in the critical illness insurance policy for business owners."}, "SuccessionPlanningCoverage": {"datatype": "boolean", "description": "Indicates whether succession planning coverage is included in the critical illness insurance policy for business owners."}}}, {"template_name": "insurance_dental", "description": "Dental Insurance synthetic data template. Dental insurance provides coverage for various dental care procedures such as cleanings, x-rays, exams, orthodontics, and dental repairs like crowns and dentures. It is offered as part of Personal Health Insurance (PHI) plans with varying coverage levels (Basic, Standard, Enhanced).", "mappings": ["dental insurance", "dental coverage", "dental plan", "oral health insurance"], "fields": {"PolicyID": {"datatype": "string", "pattern": "DI-[0-9]{6}", "description": "Unique identifier for the dental insurance policy (e.g., DI-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the individual covered under the dental insurance policy."}, "CoveragePlan": {"datatype": "string", "enum": ["PHI Basic", "PHI Standard", "PHI Enhanced"], "description": "The type of Personal Health Insurance (PHI) plan selected by the policyholder (Basic, Standard, or Enhanced)."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "The start date of the dental insurance policy."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "The end date or expiration date of the dental insurance policy."}, "PremiumAmount": {"datatype": "number", "description": "Monthly or annual premium amount paid for the dental insurance coverage."}, "PaymentFrequency": {"datatype": "string", "enum": ["Monthly", "Annually"], "description": "Frequency at which the dental insurance premium is paid (Monthly or Annually)."}, "DentalProceduresCovered": {"datatype": "array", "items": {"procedure": {"datatype": "string", "enum": ["Teeth Cleaning", "Dental X-rays", "Dental Exams", "Orthodontics (Braces)", "Bridges", "Dentures", "Crowns"], "description": "List of dental procedures covered under the policy."}}, "description": "List of dental procedures covered by the policyholder's dental insurance plan."}, "OrthodonticsCoverage": {"datatype": "boolean", "description": "Indicates if the dental insurance policy includes coverage for orthodontics (braces for adults and children)."}, "AnnualCoverageLimit": {"datatype": "number", "description": "Annual limit on coverage amount for dental procedures."}, "ClaimAmountPaid": {"datatype": "number", "description": "Amount paid out for dental insurance claims made during the policy year."}, "ClaimStatus": {"datatype": "string", "enum": ["Approved", "Pending", "Denied"], "description": "Current status of a dental insurance claim (Approved, Pending, or Denied)."}, "DependentsCovered": {"datatype": "array", "items": {"name": {"datatype": "string", "description": "Full name of the dependent covered under the dental insurance policy."}, "relationship": {"datatype": "string", "description": "Relationship of the dependent to the policyholder (e.g., spouse, child)."}}, "description": "List of dependents covered by the dental insurance policy."}, "PolicyHolderAge": {"datatype": "integer", "description": "Age of the policyholder."}, "IsCDCPEligible": {"datatype": "boolean", "description": "Indicates if the policyholder is eligible for the Canadian Dental Care Plan (CDCP)."}, "PHIPlanComparison": {"datatype": "object", "properties": {"BasicPlanCoverage": {"datatype": "boolean", "description": "Indicates if the Basic PHI plan includes dental coverage."}, "StandardPlanCoverage": {"datatype": "boolean", "description": "Indicates if the Standard PHI plan includes dental coverage."}, "EnhancedPlanCoverage": {"datatype": "boolean", "description": "Indicates if the Enhanced PHI plan includes dental coverage."}}, "description": "Details comparing the different levels of PHI coverage for dental procedures."}, "PolicyRenewal": {"datatype": "boolean", "description": "Indicates whether the dental insurance policy is eligible for renewal at the end of the term."}, "RenewalTermLength": {"datatype": "number", "description": "Length of the renewal term if the policy is renewed (in years)."}, "PolicyHolderTaxMinimization": {"datatype": "boolean", "description": "Indicates if the policyholder can use the insurance to minimize tax liabilities related to health care expenses."}}}, {"template_name": "insurance_disability", "description": "Disability insurance synthetic data template. Disability insurance helps protect an individual\u2019s income in case they are unable to work due to a medical illness, mental health issue, or injury. There are various types of disability insurance, including individual and group plans, and short-term and long-term disability plans.", "mappings": ["disability insurance", "disability coverage", "income protection", "disability plan"], "fields": {"PolicyID": {"datatype": "string", "pattern": "DI-[0-9]{6}", "description": "Unique identifier for the disability insurance policy (e.g., DI-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder."}, "PolicyHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the policyholder."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the disability insurance policy was activated."}, "PolicyType": {"datatype": "string", "enum": ["Individual", "Group", "Government"], "description": "Type of disability insurance policy (Individual, Group, or Government)."}, "CoverageType": {"datatype": "string", "enum": ["Short-Term Disability", "Long-Term Disability"], "description": "Type of coverage the policyholder is enrolled in (Short-Term Disability or Long-Term Disability)."}, "IncomeReplacementPercentage": {"datatype": "number", "min": 60, "max": 90, "description": "Percentage of income replaced by the disability insurance policy, typically between 60% to 90%."}, "BenefitAmount": {"datatype": "number", "description": "Amount of disability benefits paid to the policyholder."}, "BenefitStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the disability benefits begin after the qualifying event (e.g., injury, illness)."}, "BenefitEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the disability benefits end, either due to recovery or the end of the benefit period."}, "MedicalCondition": {"datatype": "string", "description": "Description of the medical condition that led to the disability claim (e.g., Major Depression, Injury, Cancer)."}, "ClaimStatus": {"datatype": "string", "enum": ["Approved", "Pending", "Denied"], "description": "Current status of the disability claim (Approved, Pending, or Denied)."}, "ClaimAmountPaid": {"datatype": "number", "description": "Total amount paid out for the disability claim."}, "WaitingPeriod": {"datatype": "number", "min": 1, "max": 365, "description": "Number of days before the disability benefits start, known as the waiting period."}, "TaxStatus": {"datatype": "string", "enum": ["Taxable", "Tax-Free"], "description": "Tax status of the disability benefits (Taxable or Tax-Free)."}, "DisabilityDuration": {"datatype": "number", "min": 1, "description": "Duration of the disability period (in months)."}, "RehabilitationSupport": {"datatype": "boolean", "description": "Indicates whether rehabilitation support is provided as part of the policy."}, "CoverageLimit": {"datatype": "number", "description": "Maximum coverage limit for the disability benefits."}}}, {"template_name": "insurance_life", "description": "Synthetic data template for life insurance policies, including details about the life insurance contract, beneficiary information, and different types of life insurance policies such as term life and permanent life insurance.", "mappings": ["life insurance", "life coverage", "life protection", "term life insurance"], "fields": {"PolicyID": {"datatype": "string", "pattern": "LIFE-[0-9]{6}", "description": "Unique identifier for the life insurance policy (e.g., LIFE-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder."}, "PolicyHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the policyholder."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the life insurance policy was initiated."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "End date of the life insurance policy, applicable for term life insurance (N/A for permanent life)."}, "PolicyType": {"datatype": "string", "enum": ["Term Life", "Whole Life", "Participating Life", "Universal Life"], "description": "The type of life insurance policy chosen by the policyholder."}, "CoverageAmount": {"datatype": "number", "description": "The amount of coverage provided by the life insurance policy."}, "PremiumAmount": {"datatype": "number", "description": "The premium amount paid by the policyholder on a regular basis (e.g., monthly, annually)."}, "PremiumPaymentFrequency": {"datatype": "string", "enum": ["Monthly", "Quarterly", "Annually"], "description": "The frequency at which premiums are paid."}, "PolicyRenewalOption": {"datatype": "boolean", "description": "Indicates whether the policyholder has the option to renew the policy after the term expires (only applicable for Term Life)."}, "CashValueOption": {"datatype": "boolean", "description": "Indicates whether the policy offers a cash value option (primarily for Permanent Life)."}, "CashValueAmount": {"datatype": "number", "description": "The amount accumulated in the cash value account (only applicable for Permanent Life)."}, "DeathBenefit": {"datatype": "number", "description": "The amount that will be paid to the beneficiaries upon the policyholder's death."}, "Beneficiaries": {"datatype": "array", "items": {"datatype": "string", "description": "Names of the beneficiaries who will receive the death benefit."}, "description": "List of beneficiaries entitled to the death benefit."}, "PolicyHolderHealthStatus": {"datatype": "string", "enum": ["Healthy", "Pre-existing Conditions", "Critical Illness"], "description": "Health status of the policyholder at the time of policy issuance."}, "Riders": {"datatype": "array", "items": {"datatype": "string", "enum": ["Accidental Death", "Critical Illness", "Disability", "Waiver of Premium"]}, "description": "Optional riders added to the policy to provide additional coverage or benefits."}, "RenewalPremiumIncrease": {"datatype": "number", "description": "The percentage increase in premiums upon renewal (only applicable for Term Life)."}, "UnderwritingClass": {"datatype": "string", "enum": ["Standard", "Preferred", "Substandard"], "description": "Underwriting class of the policyholder, based on their health and risk profile."}, "PolicyStatus": {"datatype": "string", "enum": ["Active", "Lapsed", "Claimed", "Terminated"], "description": "The current status of the life insurance policy."}, "PolicyHolderOccupation": {"datatype": "string", "description": "Occupation of the policyholder, which may affect the policy's premiums or underwriting."}, "PolicyHolderSmokerStatus": {"datatype": "string", "enum": ["Non-Smoker", "Smoker"], "description": "Whether the policyholder is a smoker or non-smoker, which may impact premiums."}, "PolicyLoanOutstandingAmount": {"datatype": "number", "description": "The outstanding loan amount against the policy, if applicable (for policies with cash value)."}, "PolicyLoanInterestRate": {"datatype": "number", "description": "The interest rate applied to any loans taken against the policy's cash value."}, "TaxPreferredGrowth": {"datatype": "boolean", "description": "Indicates if the policy has tax-preferred growth on the accumulated cash value (relevant for Permanent Life)."}, "AutomaticPremiumLoan": {"datatype": "boolean", "description": "Indicates if the policy has an automatic premium loan feature to pay premiums from the policy\u2019s cash value."}}}, {"template_name": "insurance_ltc", "description": "Synthetic data template for long-term care insurance policies, including details about the type of care, coverage options, benefits, and eligibility for various stages of life.", "mappings": ["long term care insurance", "ltc insurance", "long term care coverage", "elder care insurance"], "fields": {"PolicyID": {"datatype": "string", "pattern": "LTCI-[0-9]{6}", "description": "Unique identifier for the long-term care insurance policy (e.g., LTCI-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder."}, "PolicyHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the policyholder."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Start date of the long-term care insurance policy."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "End date of the long-term care insurance policy (if applicable)."}, "PolicyType": {"datatype": "string", "enum": ["Individual", "Family"], "description": "The type of long-term care insurance policy: Individual or Family."}, "CoverageAmount": {"datatype": "number", "description": "The monthly or weekly benefit payout amount from the long-term care insurance policy."}, "CareTypeCovered": {"datatype": "array", "items": {"datatype": "string", "enum": ["Nursing Care", "Rehabilitation", "Personal Care", "Homemaking", "Supervision Assistance"]}, "description": "List of care types covered under the long-term care insurance policy."}, "PolicyHolderEmploymentStatus": {"datatype": "string", "enum": ["Employed", "Self-Employed", "Retired", "Unemployed"], "description": "Employment status of the policyholder."}, "AgeRange": {"datatype": "string", "enum": ["45-54", "55-64", "65-71"], "description": "Age range of the policyholder when applying for the long-term care insurance policy."}, "BenefitsPaidFrequency": {"datatype": "string", "enum": ["Weekly", "Monthly"], "description": "Frequency of the benefit payments made under the long-term care insurance policy."}, "BenefitsAmount": {"datatype": "number", "description": "The range of the benefit paid, which can be between $125 and $2,300 per week."}, "EligibilityCriteria": {"datatype": "string", "enum": ["Need for Constant Supervision", "Substantial Assistance with Activities of Daily Living", "Stand-by Assistance for Bathing and Transferring"], "description": "Eligibility criteria for receiving long-term care insurance benefits."}, "CareLocationOption": {"datatype": "array", "items": {"datatype": "string", "enum": ["Personal Residence", "Child's Residence", "Retirement Home", "Long-Term Care Facility"]}, "description": "Locations where care can be received under the long-term care insurance policy."}, "LTCIClaimMade": {"datatype": "boolean", "description": "Indicates whether the policyholder has made a claim under the long-term care insurance policy."}, "ClaimStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "The date when the policyholder started receiving long-term care benefits."}, "ClaimEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "The date when the policyholder stopped receiving long-term care benefits (if applicable)."}, "PremiumAmount": {"datatype": "number", "description": "The monthly or annual premium amount the policyholder pays for the long-term care insurance."}, "PremiumFrequency": {"datatype": "string", "enum": ["Monthly", "Quarterly", "Annually"], "description": "The frequency at which premiums are paid for the long-term care insurance."}, "CashBenefitOption": {"datatype": "boolean", "description": "Indicates whether the policyholder has chosen a cash benefit option instead of reimbursement for care expenses."}, "WealthProtection": {"datatype": "boolean", "description": "Indicates whether the policy includes protection against the erosion of wealth due to care costs."}, "StressRelief": {"datatype": "boolean", "description": "Indicates whether the policy aims to relieve the emotional, physical, and financial stress on the policyholder\u2019s children and caregivers."}, "PolicyHolderHealthStatus": {"datatype": "string", "enum": ["Healthy", "At-Risk", "Chronic Illness", "Disability"], "description": "Current health status of the policyholder, which may impact eligibility or premiums."}, "PreExistingConditionsCovered": {"datatype": "boolean", "description": "Indicates whether pre-existing medical conditions are covered under the policy."}, "PolicyStatus": {"datatype": "string", "enum": ["Active", "Lapsed", "Cancelled", "Claimed"], "description": "Current status of the long-term care insurance policy."}}}, {"template_name": "insurance_mortgage_protection", "description": "Mortgage protection insurance synthetic data template. Mortgage protection insurance is a life insurance policy that ensures your family or beneficiaries receive a tax-free death benefit to cover mortgage payments, debts, or other living expenses in the event of your death. The coverage lasts for a set term, typically through term life insurance.", "mappings": ["mortgage protection insurance", "mortgage insurance", "home loan protection", "mortgage safety net"], "fields": {"PolicyID": {"datatype": "string", "pattern": "MP-[0-9]{6}", "description": "Unique identifier for the mortgage protection insurance policy (e.g., MP-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder."}, "PolicyHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the policyholder."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the mortgage protection insurance policy became effective."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the mortgage protection insurance policy expires."}, "CoverageAmount": {"datatype": "number", "description": "Amount of life insurance coverage provided to the policyholder's beneficiaries in the event of death."}, "PolicyType": {"datatype": "string", "enum": ["Term Life Insurance"], "description": "Type of life insurance used for mortgage protection (typically term life insurance)."}, "TermLength": {"datatype": "number", "description": "Length of the term life insurance coverage, usually set in years (e.g., 10, 15, 20, or 30 years)."}, "PremiumAmount": {"datatype": "number", "description": "Monthly or annual premium paid for the mortgage protection insurance."}, "PaymentFrequency": {"datatype": "string", "enum": ["Monthly", "Annually"], "description": "Frequency at which the premium is paid (Monthly or Annually)."}, "BeneficiaryName": {"datatype": "string", "description": "Full name of the beneficiary who will receive the death benefit."}, "BeneficiaryRelationship": {"datatype": "string", "description": "Relationship of the beneficiary to the policyholder (e.g., spouse, child, etc.)."}, "BeneficiaryContact": {"datatype": "string", "pattern": "^[0-9]{10}$", "description": "Contact number of the beneficiary."}, "MortgageAmountCovered": {"datatype": "number", "description": "The amount of mortgage debt covered by the insurance in case of the policyholder's death."}, "MortgageLenderName": {"datatype": "string", "description": "Name of the bank or mortgage lender associated with the policyholder's mortgage."}, "ClaimStatus": {"datatype": "string", "enum": ["Approved", "Pending", "Denied"], "description": "Current status of the mortgage protection insurance claim (Approved, Pending, or Denied)."}, "ClaimAmountPaid": {"datatype": "number", "description": "Amount paid out for claims made under the mortgage protection insurance policy."}, "PolicyRenewal": {"datatype": "boolean", "description": "Indicates whether the policy is eligible for renewal at the end of the term."}, "RenewalTermLength": {"datatype": "number", "description": "Length of the renewal term if the policy is renewed (in years)."}, "DeathBenefitUsage": {"datatype": "string", "enum": ["Mortgage Payments", "Debts", "Childcare", "Living Expenses", "Other"], "description": "Primary use of the death benefit by the beneficiary (e.g., mortgage payments, debts, childcare, etc.)."}, "PolicyHolderHealthStatus": {"datatype": "string", "enum": ["Healthy", "Pre-Existing Condition"], "description": "The health status of the policyholder at the time of policy issuance (Healthy or Pre-Existing Condition)."}, "Exclusions": {"datatype": "string", "description": "List of exclusions in the policy, such as certain conditions that may not be covered."}}}, {"template_name": "insurance_personal_health", "description": "Synthetic data template for personal health insurance policies in Canada, including details about health coverage, plan types (Basic, Standard, Enhanced), covered expenses, and eligibility.", "mappings": ["personal health insurance", "health insurance", "health coverage", "individual health plan", "private health insurance"], "fields": {"PolicyID": {"datatype": "string", "pattern": "PHI-[0-9]{6}", "description": "Unique identifier for the personal health insurance policy (e.g., PHI-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder."}, "PolicyHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the policyholder."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Start date of the personal health insurance policy."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "End date of the personal health insurance policy (if applicable)."}, "PolicyType": {"datatype": "string", "enum": ["Basic", "Standard", "Enhanced"], "description": "The type of personal health insurance policy chosen by the policyholder."}, "CoverageLimit": {"datatype": "number", "description": "The maximum amount covered per year for the policyholder\u2019s health expenses."}, "DeductibleAmount": {"datatype": "number", "description": "The deductible amount that the policyholder must pay before the insurance coverage begins."}, "CoinsurancePercentage": {"datatype": "number", "description": "The percentage of the medical expenses the policyholder must pay after the deductible is met."}, "PrescriptionDrugCoverage": {"datatype": "boolean", "description": "Indicates whether prescription drug coverage is included in the plan."}, "DentalCareCoverage": {"datatype": "boolean", "description": "Indicates whether dental care coverage (e.g., teeth cleanings, braces, crowns) is included in the plan."}, "VisionCareCoverage": {"datatype": "boolean", "description": "Indicates whether vision care coverage (e.g., eye exams, glasses) is included in the plan."}, "EmergencyTravelCoverage": {"datatype": "boolean", "description": "Indicates whether emergency travel medical services coverage is included (for out-of-country medical expenses)."}, "PhysiotherapyCoverage": {"datatype": "boolean", "description": "Indicates whether physiotherapy coverage for injury recovery is included in the plan."}, "MedicalEquipmentCoverage": {"datatype": "boolean", "description": "Indicates whether medical equipment (e.g., mobility aids) coverage is included in the plan."}, "PolicyHolderEmploymentStatus": {"datatype": "string", "enum": ["Employed", "Self-Employed", "Retired", "Unemployed"], "description": "Employment status of the policyholder, which may affect their eligibility or need for personal health insurance."}, "EmployerCoverageTopUp": {"datatype": "boolean", "description": "Indicates whether the policyholder is using this personal health insurance to top up their employer\u2019s workplace plan."}, "PolicyHolderRetirementStatus": {"datatype": "boolean", "description": "Indicates whether the policyholder is retired or nearing retirement."}, "Exclusions": {"datatype": "array", "items": {"datatype": "string", "description": "List of exclusions that are not covered under the policy."}, "description": "Exclusions under the personal health insurance policy (e.g., cosmetic procedures, pre-existing conditions)."}, "HealthServicesIncluded": {"datatype": "array", "items": {"datatype": "string", "enum": ["Prescription Drugs", "Dental Care", "Vision Care", "Emergency Travel", "Physiotherapy", "Medical Equipment"]}, "description": "List of health services that are covered under the personal health insurance policy."}, "FamilyCoverageOption": {"datatype": "boolean", "description": "Indicates whether the policyholder has opted for family coverage under the policy."}, "FamilyMembersCovered": {"datatype": "array", "items": {"datatype": "string", "description": "Names of family members covered under the policy, if applicable."}, "description": "List of family members covered under the personal health insurance policy."}, "PolicyStatus": {"datatype": "string", "enum": ["Active", "Lapsed", "Cancelled", "Claimed"], "description": "Current status of the personal health insurance policy."}, "PolicyHolderOccupation": {"datatype": "string", "description": "Occupation of the policyholder, which may impact the insurance premium or coverage options."}, "PreExistingConditionsCovered": {"datatype": "boolean", "description": "Indicates whether pre-existing medical conditions are covered under the policy."}, "AdditionalRiders": {"datatype": "array", "items": {"datatype": "string", "enum": ["Critical Illness", "Accidental Death", "Hospital Cash Benefit"]}, "description": "Optional riders added to the policy to provide additional coverage."}, "PolicyPremiumAmount": {"datatype": "number", "description": "The monthly or annual premium amount the policyholder pays for the health insurance."}, "PolicyPremiumFrequency": {"datatype": "string", "enum": ["Monthly", "Quarterly", "Annually"], "description": "The frequency at which premiums are paid for the personal health insurance."}}}, {"template_name": "insurance_travel", "description": "Travel insurance synthetic data template. Travel insurance helps protect travelers from unexpected medical expenses and other emergencies while traveling outside their home province or country. Coverage includes emergency medical care, trip interruption, flight delay assistance, and optional coverage for sports and activities.", "mappings": ["travel insurance", "travel coverage", "trip protection", "travel safety plan"], "fields": {"PolicyID": {"datatype": "string", "pattern": "TI-[0-9]{6}", "description": "Unique identifier for the travel insurance policy (e.g., TI-123456)."}, "PolicyHolderName": {"datatype": "string", "description": "Full name of the policyholder."}, "PolicyHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the policyholder."}, "PolicyStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the travel insurance policy became effective."}, "PolicyEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the travel insurance policy expires."}, "Destination": {"datatype": "string", "description": "Destination(s) of the trip covered under the policy."}, "CoverageType": {"datatype": "string", "enum": ["Single Trip", "Multi Trip", "Visitor to Canada"], "description": "Type of travel insurance coverage (Single Trip, Multi Trip, or Visitor to Canada)."}, "EmergencyMedicalCoverage": {"datatype": "boolean", "description": "Indicates whether emergency medical coverage is included in the policy."}, "TripInterruptionCoverage": {"datatype": "boolean", "description": "Indicates whether trip interruption coverage is included in the policy."}, "FlightDelayAssistance": {"datatype": "boolean", "description": "Indicates whether flight delay assistance is included, offering lounge access or payout if delayed over 2 hours."}, "SportsAndActivitiesCoverage": {"datatype": "boolean", "description": "Indicates whether coverage for sports and extreme activities is included in the policy."}, "SuperVisaInsurance": {"datatype": "boolean", "description": "Indicates whether Super Visa insurance is included for visitors to Canada."}, "MedicalEvacuationCoverage": {"datatype": "boolean", "description": "Indicates whether medical evacuation coverage is included in the policy."}, "PolicyPremium": {"datatype": "number", "description": "Total premium amount paid for the travel insurance policy."}, "PaymentPlan": {"datatype": "string", "enum": ["One-Time Payment", "Installments"], "description": "The payment plan for the insurance premium (One-Time Payment or Installments)."}, "PremiumAmount": {"datatype": "number", "description": "Amount of premium paid for the policy, per installment or as a lump sum."}, "TripStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Start date of the insured trip."}, "TripEndDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "End date of the insured trip."}, "TripLength": {"datatype": "number", "description": "Duration of the trip covered by the policy (in days)."}, "PolicyCoverageLimit": {"datatype": "number", "description": "Maximum coverage limit for emergency medical expenses and other covered incidents."}, "HospitalCoverageLimit": {"datatype": "number", "description": "Maximum coverage for hospitalization expenses."}, "FlightDelayDuration": {"datatype": "number", "min": 2, "description": "Duration of the flight delay, in hours, that triggers assistance coverage."}, "ClaimStatus": {"datatype": "string", "enum": ["Approved", "Pending", "Denied"], "description": "Current status of the travel insurance claim (Approved, Pending, or Denied)."}, "ClaimAmountPaid": {"datatype": "number", "description": "Total amount paid out for claims made under the travel insurance policy."}}}, {"template_name": "investment_fhsa", "description": "First Home Savings Account (FHSA) synthetic data template. The FHSA is a registered investment account that allows Canadian residents to contribute up to $40,000 (with an annual contribution limit of $8,000) to buy their first home in Canada. Contributions are tax-deductible, and qualifying withdrawals are tax-free.", "mappings": ["first home savings account", "fhsa", "home savings plan", "first time home buyer savings"], "fields": {"FHSA_ID": {"datatype": "string", "pattern": "FHSA-[0-9]{6}", "description": "Unique identifier for the FHSA account (e.g., FHSA-123456)."}, "AccountHolderName": {"datatype": "string", "description": "Full name of the FHSA account holder."}, "AccountHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the account holder."}, "SocialInsuranceNumber": {"datatype": "string", "pattern": "[0-9]{9}", "description": "Social Insurance Number (SIN) of the account holder."}, "ContributionLimit": {"datatype": "number", "min": 0, "max": 8000, "description": "Annual FHSA contribution limit ($8,000 per year)."}, "LifetimeContributionLimit": {"datatype": "number", "min": 0, "max": 40000, "description": "Lifetime FHSA contribution limit ($40,000)."}, "CurrentContribution": {"datatype": "number", "min": 0, "description": "Amount contributed in the current year."}, "AvailableContributionRoom": {"datatype": "number", "description": "Remaining contribution room available to the account holder."}, "TotalBalance": {"datatype": "number", "description": "Current total balance of the FHSA account."}, "AccountCreationDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the FHSA account was established."}, "InvestmentTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Mutual Funds", "Insurance GICs", "Segregated Funds", "ETFs", "Stocks", "Bonds"]}, "description": "List of investment types held within the FHSA."}, "TaxDeduction": {"datatype": "boolean", "description": "Indicates whether the FHSA contribution is tax-deductible."}, "ResidencyRequirement": {"datatype": "string", "description": "Eligibility details: 'Canadian resident, aged 18 or older (19 in some provinces), under 71, and a first-time home buyer in the last four years.'"}, "QualifyingHome": {"datatype": "string", "description": "Type of home eligible for FHSA withdrawal (e.g., single-family, semi-detached, townhouse, condominium, co-operative housing)."}, "WithdrawalTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Qualifying Withdrawal", "Non-Qualifying Withdrawal"]}, "description": "Types of withdrawals from FHSA, either tax-free (qualifying) or taxable (non-qualifying)."}, "WithdrawalAmount": {"datatype": "number", "description": "Amount withdrawn from FHSA."}, "WithdrawalTaxStatus": {"datatype": "string", "enum": ["Tax-Free", "Taxable"], "description": "Indicates whether the withdrawal is tax-free (qualifying) or taxable (non-qualifying)."}, "CarryForwardContributionRoom": {"datatype": "number", "min": 0, "max": 8000, "description": "Amount of unused FHSA contribution room carried forward to the next year."}}}, {"template_name": "investment_lif", "description": "Life Income Fund (LIF) synthetic data template. A LIF is a type of Registered Retirement Income Fund (RRIF) that provides income from locked-in pension assets during retirement. LIFs have specific withdrawal rules based on federal or provincial pension laws, and they provide tax-deferred savings with flexible investment options. Survivor's benefits are available for spouses or beneficiaries upon death.", "mappings": ["life income fund", "lif", "retirement income fund", "pension income fund"], "fields": {"LIF_ID": {"datatype": "string", "pattern": "LIF-[0-9]{6}", "description": "Unique identifier for the Life Income Fund account (e.g., LIF-123456)."}, "AccountHolderName": {"datatype": "string", "description": "Full name of the account holder."}, "AccountHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the account holder."}, "LIFBalance": {"datatype": "number", "description": "Current total balance of the Life Income Fund."}, "AccountCreationDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the LIF account was established."}, "LIFTransferDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when assets were transferred into the LIF account."}, "InvestmentTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Mutual Funds", "Stocks", "Bonds", "ETFs", "GICs", "Real Estate"]}, "description": "List of investment types held within the LIF."}, "WithdrawalStartDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when withdrawals from the LIF began."}, "AnnualWithdrawalAmount": {"datatype": "number", "description": "Annual amount withdrawn from the LIF."}, "WithdrawalType": {"datatype": "string", "enum": ["Qualifying Withdrawal", "Non-Qualifying Withdrawal"], "description": "Indicates whether the withdrawal is qualifying or non-qualifying."}, "AnnualWithdrawalLimit": {"datatype": "number", "description": "Annual withdrawal limit based on federal or provincial pension law."}, "SurvivorBenefits": {"datatype": "boolean", "description": "Indicates whether survivor's benefits are available for the account holder's spouse or beneficiaries."}, "BeneficiaryName": {"datatype": "string", "description": "Full name of the beneficiary if applicable."}, "Province": {"datatype": "string", "description": "Province where the LIF account is held, which may influence withdrawal rules."}, "SpouseConsentRequired": {"datatype": "boolean", "description": "Indicates whether the account holder's spouse or common-law partner's consent is required to open the LIF."}, "TaxDeferredStatus": {"datatype": "boolean", "description": "Indicates whether the LIF is tax-deferred until withdrawals are made."}, "WithdrawalTaxStatus": {"datatype": "string", "enum": ["Tax-Free", "Taxable"], "description": "Indicates whether the withdrawal is tax-free or taxable."}, "LIFMaturityAge": {"datatype": "number", "min": 71, "max": 100, "description": "The age at which the account holder reaches maturity for LIF withdrawal rules."}}}, {"template_name": "investment_lira", "description": "Locked-In Retirement Account (LIRA) synthetic data template. A LIRA is a Canadian registered account designed to hold and invest pension assets from former employers. Investment income within the LIRA is tax-deferred until withdrawal. This template includes account details, investment options, locked-in rules, withdrawal policies, and eligibility requirements.", "mappings": ["locked in retirement account", "lira", "retirement savings account", "locked in savings"], "fields": {"LIRA_ID": {"datatype": "string", "pattern": "LIRA-[0-9]{6}", "description": "Unique identifier for the LIRA account (e.g., LIRA-654321)."}, "AccountHolderName": {"datatype": "string", "description": "Full name of the LIRA account holder."}, "AccountHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the account holder."}, "SocialInsuranceNumber": {"datatype": "string", "pattern": "[0-9]{9}", "description": "Social Insurance Number (SIN) of the account holder."}, "EmployerName": {"datatype": "string", "description": "Name of the former employer who contributed to the pension."}, "PensionPlanType": {"datatype": "string", "enum": ["Defined Benefit Pension Plan", "Defined Contribution Pension Plan"], "description": "Type of pension plan transferred into the LIRA."}, "LIRAOpeningDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the LIRA account was established."}, "TotalBalance": {"datatype": "number", "description": "Current total balance of the LIRA account."}, "InvestmentTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Mutual Funds", "Insurance GICs", "Segregated Funds", "ETFs", "Stocks", "Bonds", "Annuities"]}, "description": "List of investment types held within the LIRA."}, "LockedInStatus": {"datatype": "boolean", "description": "Indicates whether the funds in the LIRA are locked-in and cannot be accessed until retirement age."}, "MinimumWithdrawalAge": {"datatype": "number", "description": "Minimum age at which the account holder can start making withdrawals, typically 55 or older, depending on pension legislation."}, "WithdrawalOptions": {"datatype": "array", "items": {"datatype": "string", "enum": ["Transfer to a Life Income Fund (LIF)", "Transfer to a Locked-In Retirement Income Fund (LRIF)", "Transfer to a Prescribed Retirement Income Fund (PRIF)", "Purchase a life annuity"]}, "description": "Available withdrawal options once the minimum age is reached."}, "UnlockingOptions": {"datatype": "array", "items": {"datatype": "string", "enum": ["Up to 50% unlocked at age 55", "Financial hardship exemption", "Non-residency withdrawal", "Reduced life expectancy withdrawal", "Small balance exemption"]}, "description": "Special exceptions that allow for early withdrawal of LIRA funds."}, "SpousalConsentRequired": {"datatype": "boolean", "description": "Indicates whether spousal or common-law partner consent is required for certain withdrawals."}, "TaxDeferredStatus": {"datatype": "boolean", "description": "Indicates whether the investment income within the LIRA is tax-deferred until withdrawal."}}}, {"template_name": "investment_resp", "description": "Registered Education Savings Plan (RESP) synthetic data template. An RESP is a tax-deferred account in Canada designed to help save for a child\u2019s post-secondary education. This template includes fields for plan details, account holder and beneficiary information, contribution limits, government grants, and eligible education expenses.", "mappings": ["registered education savings plan", "resp", "education savings", "child education fund"], "fields": {"RESP_ID": {"datatype": "string", "pattern": "RESP-[0-9]{6}", "description": "Unique identifier for the RESP account."}, "PlanType": {"datatype": "string", "enum": ["Individual", "Family"], "description": "Type of RESP account: Individual or Family."}, "AccountHolderName": {"datatype": "string", "description": "Full name of the RESP account holder."}, "AccountHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the RESP account holder."}, "Beneficiaries": {"datatype": "array", "items": {"datatype": "object", "properties": {"BeneficiaryName": {"datatype": "string", "description": "Full name of the beneficiary."}, "BeneficiaryDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the beneficiary."}, "RelationshipToHolder": {"datatype": "string", "enum": ["Child", "Grandchild", "Adopted Child", "Stepchild", "Other"], "description": "Relationship of the beneficiary to the RESP account holder."}}}, "description": "List of beneficiaries associated with the RESP."}, "TotalContribution": {"datatype": "number", "min": 0, "max": 50000, "description": "Total contributions made to the RESP, with a lifetime limit of $50,000 per beneficiary."}, "AnnualContribution": {"datatype": "number", "min": 0, "description": "Current year's contribution amount."}, "CESGReceived": {"datatype": "number", "min": 0, "max": 7200, "description": "Total Canada Education Savings Grant (CESG) received, with a lifetime maximum of $7,200 per beneficiary."}, "CLBReceived": {"datatype": "number", "min": 0, "description": "Total Canada Learning Bond (CLB) received."}, "ProvincialGrants": {"datatype": "object", "properties": {"BCTESG": {"datatype": "number", "min": 0, "max": 1200, "description": "B.C. Training and Education Savings Grant (BCTESG), up to $1,200."}, "QESI": {"datatype": "number", "min": 0, "max": 3600, "description": "Qu\u00e9bec Education Savings Incentive (QESI), with a lifetime maximum of $3,600."}}, "description": "Provincial grants received under the RESP."}, "InvestmentTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Mutual Funds", "GICs", "ETFs", "Stocks", "Bonds", "Segregated Funds"]}, "description": "List of investment types held within the RESP."}, "AccountCreationDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the RESP account was established."}, "EligibleExpenses": {"datatype": "array", "items": {"datatype": "string", "enum": ["Tuition", "Books", "Technology", "Apprenticeship Fees", "Trade School Costs", "Room & Board", "Transportation"]}, "description": "List of eligible education expenses covered by RESP withdrawals."}, "TotalBalance": {"datatype": "number", "description": "Current total balance of the RESP account."}, "WithdrawnAmount": {"datatype": "number", "min": 0, "description": "Total amount withdrawn from the RESP for educational expenses."}, "WithdrawnBy": {"datatype": "string", "enum": ["Beneficiary", "Account Holder"], "description": "Who withdrew the funds: the beneficiary or the account holder."}}}, {"template_name": "investment_rrif", "description": "Registered Retirement Income Fund (RRIF) synthetic data template. A RRIF is a tax-deferred investment account in Canada that provides income during retirement. This template includes fields for account details, account holder information, transferred funds, withdrawals, taxation, and investment types.", "mappings": ["registered retirement income fund", "rrif", "retirement income plan", "pension fund"], "fields": {"RRIF_ID": {"datatype": "string", "pattern": "RRIF-[0-9]{6}", "description": "Unique identifier for the RRIF account."}, "AccountHolderName": {"datatype": "string", "description": "Full name of the RRIF account holder."}, "AccountHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the RRIF account holder."}, "RRIFCreationDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the RRIF account was opened."}, "FundingSource": {"datatype": "array", "items": {"datatype": "string", "enum": ["RRSP", "Another RRIF", "Unlocked Pension Plan Funds", "Spouse's RRSP (due to death, separation, or divorce)", "Employer\u2019s Deferred Profit-Sharing Plan (DPSP)", "Spouse\u2019s Employer DPSP (due to death, separation, or divorce)"]}, "description": "List of sources from which funds were transferred to open the RRIF."}, "TotalBalance": {"datatype": "number", "description": "Current total balance of the RRIF account."}, "AnnualMinimumWithdrawal": {"datatype": "number", "description": "Required minimum withdrawal amount for the year."}, "Withdrawals": {"datatype": "array", "items": {"datatype": "object", "properties": {"WithdrawalDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of the withdrawal transaction."}, "WithdrawalAmount": {"datatype": "number", "min": 0, "description": "Amount withdrawn from the RRIF."}, "WithholdingTaxApplied": {"datatype": "boolean", "description": "Indicates if withholding tax was applied to the withdrawal (only applicable for withdrawals above the minimum amount)."}}}, "description": "List of withdrawals made from the RRIF."}, "TaxOnWithdrawals": {"datatype": "number", "description": "Total tax paid on withdrawals from the RRIF."}, "InvestmentTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Mutual Funds", "GICs", "ETFs", "Stocks", "Bonds", "Segregated Funds"]}, "description": "List of investment types held within the RRIF."}, "CanConvertToRRSP": {"datatype": "boolean", "description": "Indicates if the RRIF funds can be converted back to an RRSP (only applicable if the account holder is under 71)."}, "MultipleRRIFs": {"datatype": "boolean", "description": "Indicates if the account holder owns multiple RRIF accounts."}, "BeneficiaryOnDeath": {"datatype": "object", "properties": {"BeneficiaryName": {"datatype": "string", "description": "Full name of the designated beneficiary upon account holder\u2019s death."}, "BeneficiaryRelationship": {"datatype": "string", "enum": ["Spouse", "Common-law Partner", "Child", "Other"], "description": "Relationship of the beneficiary to the RRIF account holder."}, "RolloverEligibility": {"datatype": "boolean", "description": "Indicates if the beneficiary is eligible for a tax-free rollover of the RRIF funds."}}, "description": "Details of the beneficiary designated to receive RRIF funds upon the account holder\u2019s death."}}}, {"template_name": "investment_rrsp", "description": "Registered Retirement Savings Plan (RRSP) synthetic data template. An RRSP is a registered savings account in Canada that offers tax benefits and helps individuals save for retirement. This template includes fields for account holder details, contribution limits, tax benefits, borrowing options for home buying and education, and post-retirement options.", "mappings": ["registered retirement savings plan", "rrsp", "retirement savings", "rrsp investment"], "fields": {"RRSP_ID": {"datatype": "string", "pattern": "RRSP-[0-9]{6}", "description": "Unique identifier for the RRSP account."}, "AccountHolderName": {"datatype": "string", "description": "Full name of the RRSP account holder."}, "AccountHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the account holder."}, "ContributionLimit": {"datatype": "number", "min": 0, "max": 31560, "description": "Annual maximum contribution limit for the RRSP (e.g., $31,560 for 2024)."}, "CurrentContribution": {"datatype": "number", "min": 0, "max": 31560, "description": "Current annual contribution amount."}, "UnusedDeductionRoom": {"datatype": "number", "description": "Unused RRSP deduction room carried forward from previous years."}, "HomeBuyersPlanAmount": {"datatype": "number", "min": 0, "max": 60000, "description": "Amount borrowed under the Home Buyers' Plan (up to a maximum of $60,000)."}, "LifelongLearningPlanAmount": {"datatype": "number", "min": 0, "max": 10000, "description": "Amount borrowed per calendar year under the Lifelong Learning Plan (up to $10,000 per year, with a lifetime maximum of $20,000)."}, "TotalBalance": {"datatype": "number", "description": "Current total balance of the RRSP account."}, "AccountCreationDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the RRSP account was established."}, "AgeAtContributionStop": {"datatype": "number", "description": "Age at which contributions to the RRSP stop (typically 71)."}, "PostRetirementOption": {"datatype": "string", "enum": ["RRIF", "Annuity", "Withdrawal"], "description": "The option selected at or after age 71: convert to a Registered Retirement Income Fund (RRIF), purchase an annuity, or opt for withdrawal."}, "Investments": {"datatype": "array", "items": {"datatype": "string", "enum": ["Mutual Funds", "GICs", "ETFs", "Stocks", "Bonds", "Segregated Funds"]}, "description": "List of investment types held within the RRSP."}}}, {"template_name": "investment_tfsa", "description": "Tax-Free Savings Account (TFSA) synthetic data template. A TFSA is a registered investment account designed to help Canadians save money with tax-free growth and withdrawals. This template includes account details, contribution limits, investment types, withdrawal policies, and eligibility requirements.", "mappings": ["tax free savings account", "tfsa", "savings account", "tax free investment"], "fields": {"TFSA_ID": {"datatype": "string", "pattern": "TFSA-[0-9]{6}", "description": "Unique identifier for the TFSA account (e.g., TFSA-123456)."}, "AccountHolderName": {"datatype": "string", "description": "Full name of the TFSA account holder."}, "AccountHolderDOB": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of birth of the account holder."}, "SocialInsuranceNumber": {"datatype": "string", "pattern": "[0-9]{9}", "description": "Social Insurance Number (SIN) of the account holder."}, "ContributionLimit": {"datatype": "number", "min": 0, "max": 7000, "description": "Annual TFSA contribution limit for 2025 (e.g., $7,000)."}, "CurrentContribution": {"datatype": "number", "min": 0, "description": "Amount contributed in the current year."}, "AvailableContributionRoom": {"datatype": "number", "description": "Remaining contribution room available to the account holder."}, "TotalBalance": {"datatype": "number", "description": "Current total balance of the TFSA account."}, "AccountCreationDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the TFSA account was established."}, "InvestmentTypes": {"datatype": "array", "items": {"datatype": "string", "enum": ["Mutual Funds", "Insurance GICs", "Segregated Funds", "ETFs", "Stocks", "Bonds"]}, "description": "List of investment types held within the TFSA."}, "WithdrawalPolicy": {"datatype": "string", "description": "Information on the TFSA withdrawal policy. Withdrawals are tax-free and may be subject to investment-specific restrictions."}, "ResidencyRequirement": {"datatype": "string", "description": "Eligibility details: typically 'Canadian resident, aged 18 or older with a Social Insurance Number (SIN)'."}}}, {"template_name": "suspicious_transaction_report", "description": "Suspicious Transaction Report (STR) template for documenting and reporting potentially suspicious insurance transactions to comply with AML regulations. This captures details about unusual client activities that may indicate money laundering.", "mappings": ["suspicious transaction report", "str report", "aml report", "unusual transaction"], "fields": {"ReportID": {"datatype": "string", "pattern": "STR-[0-9]{10}", "description": "Unique identifier for the suspicious transaction report."}, "ReportDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the suspicious activity report was filed."}, "DetectionMethod": {"datatype": "string", "enum": ["Automated Alert", "Employee Detection", "External Referral", "Periodic Review"], "description": "How the suspicious activity was initially detected."}, "ClientDetails": {"datatype": "object", "properties": {"ClientID": {"datatype": "string", "pattern": "CL-[0-9]{7}", "description": "Client identifier for the subject of the report."}, "ClientName": {"datatype": "string", "description": "Full name of the client."}, "ClientRiskRating": {"datatype": "string", "enum": ["Low", "Medium", "High", "Very High"], "description": "Current risk rating assigned to the client."}, "RelationshipDuration": {"datatype": "number", "description": "Length of client relationship in months."}}, "description": "Details about the client involved in the suspicious activity."}, "TransactionDetails": {"datatype": "object", "properties": {"TransactionID": {"datatype": "string", "pattern": "TXN-[0-9]{12}", "description": "Identifier for the suspicious transaction(s)."}, "TransactionDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date of the suspicious transaction."}, "TransactionType": {"datatype": "string", "enum": ["Premium Payment", "Policy Surrender", "Loan Against Policy", "Beneficiary Change", "Ownership Change", "Multiple Transactions"], "description": "Type of transaction flagged as suspicious."}, "TransactionAmount": {"datatype": "number", "min": 0, "description": "Total monetary value of the suspicious transaction(s)."}, "PaymentMethod": {"datatype": "string", "enum": ["Cash", "Check", "Wire Transfer", "Electronic Transfer", "Money Order", "Cryptocurrency", "Other"], "description": "Method of payment used for the transaction."}}, "description": "Details about the suspicious transaction(s)."}, "SuspiciousActivityIndicators": {"datatype": "array", "items": {"datatype": "string", "enum": ["Structuring", "Early Policy Surrender", "Overpayment and Refund Request", "Third-Party Funding", "Multiple Policy Purchases", "Unusual Premium Increases", "Change in Beneficiary Before Claim", "Quick Policy Replacement", "Unusual Source of Funds", "Inconsistent with Client Profile"]}, "description": "Specific indicators of suspicious activity detected."}, "ActivityDescription": {"datatype": "string", "description": "Detailed narrative description of the suspicious activity."}, "RegulatoryReportingStatus": {"datatype": "object", "properties": {"ReportedToFINTRAC": {"datatype": "boolean", "description": "Whether the activity was reported to FINTRAC (Financial Transactions and Reports Analysis Centre of Canada)."}, "FINTRACReferenceNumber": {"datatype": "string", "description": "Reference number provided by FINTRAC if reported."}, "ReportingDate": {"datatype": "date", "format": "YYYY-MM-DD", "description": "Date when the report was submitted to regulatory authorities."}}, "description": "Status of regulatory reporting for this suspicious activity."}, "InternalActions": {"datatype": "array", "items": {"datatype": "string", "enum": ["Enhanced Due Diligence", "Transaction Rejected", "Transaction Held", "Account Monitoring Increased", "Client Relationship Terminated", "Internal Investigation Initiated"]}, "description": "Actions taken internally in response to the suspicious activity."}, "ReportedBy": {"datatype": "string", "description": "Employee ID or name who reported the suspicious activity."}, "ReviewedBy": {"datatype": "string", "description": "AML Compliance Officer who reviewed the report."}}}]}